// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// apart_rcpp
Rcpp::IntegerVector apart_rcpp(const arma::mat& signal, double pen, int nStates);
RcppExport SEXP _apartruptures_apart_rcpp(SEXP signalSEXP, SEXP penSEXP, SEXP nStatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type signal(signalSEXP);
    Rcpp::traits::input_parameter< double >::type pen(penSEXP);
    Rcpp::traits::input_parameter< int >::type nStates(nStatesSEXP);
    rcpp_result_gen = Rcpp::wrap(apart_rcpp(signal, pen, nStates));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_apartruptures_apart_rcpp", (DL_FUNC) &_apartruptures_apart_rcpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_apartruptures(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
